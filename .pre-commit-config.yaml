# Pre-commit hooks for BleedRate
# Install: pip install pre-commit && pre-commit install
# Run manually: pre-commit run --all-files

repos:
  # Standard pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        name: Trim trailing whitespace
      - id: end-of-file-fixer
        name: Fix end of files
      - id: check-yaml
        name: Check YAML syntax
      - id: check-json
        name: Check JSON syntax
      - id: check-added-large-files
        name: Check for large files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
        name: Check for merge conflicts
      - id: check-toml
        name: Check TOML syntax
      - id: debug-statements
        name: Check for debug statements
      - id: mixed-line-ending
        name: Fix mixed line endings

  # Python code formatting with Black
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        name: Format code with Black
        language_version: python3.11

  # Python linting with Ruff
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.9
    hooks:
      - id: ruff
        name: Lint with Ruff
        args: [--fix, --exit-non-zero-on-fix]

  # Security checks with Bandit
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        name: Security check with Bandit
        args: ['-c', 'pyproject.toml', '-ll']
        additional_dependencies: ['bandit[toml]']

  # Run tests before commit (fast mode)
  - repo: local
    hooks:
      - id: pytest-fast
        name: Run fast tests
        entry: pytest
        language: system
        pass_filenames: false
        always_run: true
        args: ['-x', '--tb=short', '-q', '-m', 'not slow']
        stages: [commit]

  # Check test coverage (on push only, not every commit)
  - repo: local
    hooks:
      - id: pytest-coverage
        name: Check test coverage
        entry: pytest
        language: system
        pass_filenames: false
        always_run: true
        args: ['--cov=app', '--cov-fail-under=70', '-q']
        stages: [push]
