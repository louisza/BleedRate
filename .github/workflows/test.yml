name: Tests & Quality Checks

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.11', '3.12']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      
      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run linting checks
        run: |
          ruff check .
      
      - name: Check code formatting
        run: |
          black --check .
      
      - name: Run tests with coverage (parallel)
        run: |
          pytest tests/ \
            -v \
            -n auto \
            --cov=app \
            --cov-report=xml \
            --cov-report=term-missing \
            --cov-fail-under=70
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: matrix.python-version == '3.11'
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
          verbose: true

  security:
    runs-on: ubuntu-latest
    name: Security Scan
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install bandit
        run: |
          pip install bandit[toml]
      
      - name: Run security checks
        run: |
          bandit -r app/ -ll -f json -o bandit-report.json || true
          bandit -r app/ -ll
      
      - name: Upload security report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: bandit-security-report
          path: bandit-report.json

  lint:
    runs-on: ubuntu-latest
    name: Code Quality
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install linting tools
        run: |
          python -m pip install --upgrade pip
          pip install black ruff mypy
      
      - name: Run Black
        run: |
          black --check --diff .
      
      - name: Run Ruff
        run: |
          ruff check . --output-format=github
      
      - name: Run type checking (if mypy config exists)
        run: |
          mypy app/ --ignore-missing-imports || echo "⚠️ Type checking had issues"
        continue-on-error: true

